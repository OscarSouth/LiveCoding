runWith allegro

keySig = F \\\ aeolian

v = ("0", "0") :: (Pattern Int, Pattern Int)

p09 p1 = d09 $ do
  id $
    stack [silence
      -- ,ruismk minim "[~ sn]"
      -- ,ruismk minim "[~ cp]"
      ,ruismk crotchet "sb"
      ,ruismk crotchet "~ hh"
      -- ,ruismk 1 "hats"
      ] |= ch 09
        |* vel p1
        -- >> silence

p10 p0 = d10 $ do
  stack [silence
    ,cymbals quaver "rd"
    ] #ch 10
      |= vel (fast 2 $ 0.75 <~ lfo sine 0.3 0.6)

p12 p0 p1 = d12 $ do
  let (motion, prog) = (fst p0, inKey keySig)
  id $
    stack [silence
      ,fast 4 $ midinote "60"
      ] |+ vel 0.4
        |= ch 12
        |+ humanise 0.1
        |= legato 0.4
        |+| prog 4 (motion
         -- +| ""
          )
      -- >> silence

pad07 p0 = d07 $ do
  stack [silence
    ,fast 16 $ "0"
    ] |+ note (keySig "0!3 [0!3 4]")
      |+ vel (fast 4 "0.02 0.1!3")
      |+ pushBy crotchet (vel "<[0 [0.2 0]]> 0 0 0")
      |+ pushBy crotchet (note "<[0 [12 0]]> 0 0 0")
      |- note 24
      #ch 07
      -- >> silence



let animoog = cc' 7 2

pad08 p0 = d08 $ do
  let (motion, prog) = (fst p0, inKey keySig)
  id $
    stack [silence
      ,fast 2 $ note "0(3,8)"
      -- ,note "~ [~ ~ ~ 4]"
      ] |+ vel 1
        |+ pushBy crotchet (note (fast 2 "0 11 4"))
        |+ note 1
        #ch 08
        -- >> silence

  hush
