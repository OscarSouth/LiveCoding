runWith andante

stopTransportNow

pad10 p0 = d10 $ do
  stack [silence
    ,fast 4 $ kick "0" |+ vel 0.2
    ,fast 2 $ hpedal "~ 0"
    -- ,fast 2 $ click "~ <0 [0 ~]>" |+ vel 1
    -- ,fast 2 $ snare "~ <~ [~ 0]>" |+ vel 1
    -- ,fast 4 $ trunc 0.5 $ snare "0 0 0 0" |+ vel 1
    -- ,fast 4 $ ride "~ 0" |+ humanise 0.3
    -- ,fast 4 $ hopen "0" |+ humanise 0.3
    -- ,slow 4 $ crash "0" |+ vel 0.2
    -- ,fast 4 $ trunc 0.55 $ floortom "0 ~ ~ 0?" |+ vel "0.8" |+ humanise 0.5
    ] |+ vel p0
      |+ humanise 0.1
      -- >> silence

pad16 p0 = d16 $ do
  let
    v1 = stack [silence
      ,midinote "74 [~ 70] [~ 72] ~ 74 [~ 70] [~ 79] ~" |- vel 0.2
      ,fast 4 $ midinote "55 62"
      ]
  let
    v2 = stack [silence
      ,fast 2 $ midinote "77 [~ 74] [~ 77] ~" |- vel 0.2
      ,fast 4 $ midinote "62 69"
      ]
  let
    v3 = stack [silence
      ,midinote "73 [~ 71] [~ 73] ~ 74 [~ 71] [~ 73] ~" |- vel 0.2
      ,fast 4 $ midinote "59 66"
      ]
  let
    v4 = stack [silence
      ,midinote "70 [~ 69] [~ 70] ~ 74 [~ 69] [~ 70] ~" |- vel 0.2
      ,fast 4 $ midinote "58 62"
      ]
-- ARRANGEMENT
  stack [silence
    ,cat [v1,v2,v3,v4]
    ,ped downbeat
    ] |+ vel 0.25 |+ vel p0
      |+ humanise 0.2
      #ch 16
      -- >> silence

pad14 p0 = d14 $ do
  let inKey = G \\\ aeolian
  let upper = note "0 [~ 0] [~ 0] ~ 0 [~ 0] [~ 0] ~"
  let lower = fast 4 $ note "0 0"
  stack [silence
    -- ,upper
    ,lower
      |+ note (inKey (slow 4 "[0 4]*12 [2 4]*4") + "0 7 4 0")
      -- |+ note (slow 4 $ inKey "[0 4]*4 [4 8]*4 [2 6]*4 [2 4]*4" + "0 0 1 0")
    ,ped downbeat
    ,toneA 0.2 0.5 0.4
    ,toneB 0.5 0.1 0.8
    ] |+ vel 0.05 |+ vel p0
      |+ humanise 0.2
      |- note 12
      #ch 14

d10 $ midinote "51 . 56*3" #ch 9


let ruismk bars pat p0 = do
    let mult = fromList [(fromIntegral . round) bars] :: Pattern Time
    let ps = [("sub", sub "0"),
              ("bd", bd "0"),
              ("sn", sn "0"),
              ("cp", cp "0"),
              ("hh", hh "0"),
              ("oh", oh "0"),
              ("pc", hh "0")
            ]
    let fs = [("semibreve", fast 1),
              ("minim", fast 2),
              ("crotchet", fast 4),
              ("quaver", fast 8),
              ("semiquaver", fast 16),
              ("demisemiquaver", fast 32),
              ("echo" , stut 2 0.7 (semiquaver/mult)),
              ("echos" , stut 2 0.7 (quaver/mult)),
              ("lead" , ((~>) (15*semiquaver/mult))),
              ("leads" , ((~>) (7*quaver/mult)))
            ]
     in d09 $ ur bars pat ps fs |+ vel p0

pad09 p0 = ruismk 1 "[bd:lead, ~ sn:echos]" p0


hush
