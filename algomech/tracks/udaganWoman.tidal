-- AIYY UMSUUR UDAGAN YRYATA

runWith moderato

p06 p0 p1 p2 = d06 $ do
  let (motion, prog) = (fst' p0, inKey p1)
  let grainlength = cc 1
  let grainrand = cc 74
  id $
    stack [silence
      ,quanta semiquaver "h" |+ vel (lfo rand 0.1 0.6)
      ,slow 2 $ quanta crotchet "~ h" |+ vel (lfo rand 0.88 0.9)
      ,grainlength 0.005
      ] |= legato 0.1 #ch 06
        -- |+| prog 4 (fst motion
         -- +| ""
          -- ) |+ note (snd motion)
      -- >> silence

p08 p0 p1 p2 = d08 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    within (0.25, 0.375) (|+ note "[15]") $
    -- every 4 (up4 (|+ note "~")) $
    stack [silence
      ,phrase 1 "x*8"
      -- ,phrase 1 "x"
      -- ,slow 2 $ modwheel (lfo saw 0 0.4)
      ,modwheel 0.0
      ] |* vel p2 #ch 08
        -- |- note 12
        |= legato "1.1!7 <1.1 1.1 1.1 0.7>"
        |+| prog 4 (fst motion
         -- +| "[0 2 4 0]/2"
         -- +| "[0 2]/4"
         -- +| "[0 ~!3]*2"
         +| "[0 ~!3]*4"
         +| "[0]*64"
            -- +| 0
          ) |+ note (snd motion)

p09 p1 = d09 $ do
  id $
    stack [silence
      -- ,ruismk minim "[~ cp]*2"
      -- ,ruismk crotchet "bd"
      -- ,ruismk quaver "~ hh"
      ,ruismk minim "~ hh"
      ,semiquaver <~ (stut 2 1.5 semiquaver $ ruismk minim "~ cp" ) |- vel 0.2
      -- ,ruismk 1 "bd:echos"
      ,ruismk 1 "bd"
      ,ruismk 1 "~!3 sb ~ sb ~ sb"
      -- ,ruismk 1 "hats"
      ] |* vel p1 #ch 09
        -- >> silence

p10 p0 = d10 $ do
  stack [silence
    ,kit minim "~ sn" |+ vel 0.4
    ,cymbals quaver "rd" #vel 0.9 |* vel (fast 2 $ 0.75 <~ lfo sine 0.4 0.8)
    -- ,cymbals 1 "cr/8" #vel 0.76
    ,pullBy crotchet $ hats minim "h"
    ] |* vel p0 #ch 10

p11 p0 p1 p2 = d11 $ do
  let (motion, prog) = (fst' p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "x"
      ,modwheel (slow 8 $ lfo tri 0.3 0.6)
      ] |* vel p2 #ch 11
        |+ note 24
        |+| prog 1 (fst motion
         +| "<0 [2 . -2 -3]>*2"
          ) |+ note (snd motion)
        -- >> silence

p12 p0 p1 p2 = d12 $ do
  let (motion, prog) = (fst' p0, inKey p1)
  id $
    stack [silence
      ,fast 4 $ midinote "60"
      -- ,modwheel (slow 16 $ lfo saw 0 0.4)
      ,modwheel (slow 16 $ lfo saw 0.2 0.99)
      -- ,modwheel 0.0
      ,dPluck
      ] |* vel p2 #ch 12
        -- |+ vel 0.8
        |+ humanise 0.1
        |= legato 0.4
        -- |- note 12
        -- |+ note 12
        |+| prog 4 (fst motion
         -- +| "[0 2 -2 -3]*16"
         -- +| "[0]*16"
         +| "[0 . 3 4]*16"
          ) |+ note (snd motion)
      -- >> silence

p13 p0 p1 p2 = d13 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stack [silence
      -- ,note "2/2"
      ,note "0/2"
      -- ,blend (slow 3 $ lfo sine 0.25 0.5)
      ,blend 1
      ] |* vel p2 #ch 13
        |- note 12
        |+| prog 4 (fst motion
         -- +| "[0 4 7 9]"
         +| "[0 7 4 9]*4"
          ) |+ note (snd motion)
      -- >> silence

p15 p0 p1 p2 = d15 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    every 2 (rev) $
    stack [silence
      ,phrase 1 "mp"
      ,semiquaver ~>  ped "[0 1!7]"
      ] |* vel p2 #ch 15
        |+ humanise 0.1
        -- |+ note "[0 <0 12>]/4"
        -- |- note 12
        |+| prog 4 (fst motion
         -- +| "[0 4 7 9]*4"
        |+ "[0,<2 2 -3 [4 3]>]"
         +| "[0 4 7 [2 1]]"
          ) |+ note (snd motion)
      -- >> silence

p16 p0 p1 p2 = d16 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stut 3 0.6 0.125 $
    stack [silence
      ,note "0/2"
      ,semiquaver ~>  ped "[0 1!7]"
      ] |* vel p2 #ch 16
        -- |- note 24
        |- note 12
        |+ humanise 0.1
        |+| prog 4 (fst motion
         +| "[0 , 7 <9 [11 . 14 21]>]*8"
         -- +| "[0,7]"
          ) |+ note (snd motion)
      -- >> silence

hush
