-- KOLUKECHEEN

runWith andante

p08 p0 p1 p2 = d08 $ do
  let (motion, prog) = (snd p0, inKey p1)
  id $
    stack [silence
      -- ,phrase minim "mp(3,8)",phrase 1 "mp"
      -- ,phrase 1 "mp(3,8)"
      ,phrase 1 "mp"
      -- ,phrase 1 "mp:."
      -- ,modwheel 0.2
      ,modwheel (slow 5 $ lfo sine 0 0.1)
      ] |* vel p2 #ch 08
        -- |+ note 12
        |+| prog 4 (fst motion
         -- +| (every 4 rev "[0 2 4 7 11 9 4 2]*16")
         -- +| "0*64"
         -- +| "[0 -5 -3 -5]*8" |+ 7
        -- |+ "[0 -5 -3]"
          ) |+ note (snd motion)
        -- >> silence

p09 p0 = d09 $ do
  id $
    stack [silence
      ,ruismk crotchet "sb"
      ,ruismk 1 "bd"
      -- ,ruismk 1 "hats"
      -- ,ruismk minim "bd"
      -- ,ruismk minim "~ sn"
      -- ,ruismk crotchet "~ hh"
      -- ,ruismk 0.25 "cp(3,8)"
      ] |* vel p0 #ch 09
      -- >> silence

p10 p0 = d10 $ do
  id $
    -- stut 2 1 quaver $
    -- degrade $
    stack [silence
      -- ,hats 1 "16" #vel (fast 4 $ crotchet ~> lfo sine 0.3 0.54)
      ,kit 1 "[bd:echo bd:lead]" #vel 0.8
      ,kit 1 "~ [~!2 bd? ss] [~ bd] ss" #vel 0.6
      ,kit minim "[~ <rm:echos rm:leads>]" #vel 0.7
      ,cymbals crotchet "~ rd" #vel 0.6
      ] |= ch 10
        |* vel "[1.1 0.9!7]*4"
        |+ vel 0.3
        |* vel p0
        |+ humanise 0.2
        -- >> silence

p11 p0 p1 p2 = d11 $ do
  let (motion, prog) = (fst p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp"
      ,modwheel 0.4
      ] |* vel p2 #ch 11
        |+ note 12
        -- |- note 12
        |+| prog 4 (fst motion
         -- +| "[0]*8"
          ) |+ note (snd motion)
      -- >> silence

p14 p0 p1 p2 = d14 $ do
  let (motion, prog) = (snd p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp"
      ,toneA 0.5 0.7 1
      ,toneB 0.8 0.45 1
      ] |* vel p2 #ch 14
        |- note 12
        |+| prog 4 (fst motion
         +| "[0,4]!3 [0,-3] [0,4]!2 [0,-3]!2"
          ) |+ note (snd motion)
      -- >> silence

p15 p0 p1 p2 = d15 $ do
  let (motion, prog) = (snd p0, inKey p1)
  id $
    -- stut 2 1.5 semiquaver $
    stack [silence
      ,phrase minim "mp(3,8)"
      -- ,phrase minim "x"
      ,hemidemisemiquaver ~> ped "[0 1!31]"
      ] |* vel p2 #ch 15
        |+ humanise 0.1
        |+ note 12
        -- |- note "[0,12]"
        |+| prog 4 (fst motion
         +| "[0 -5 -3]*8"
         -- +| "0*8"
          ) |+ note (snd motion)
      -- >> silence

p16 p0 p1 p2 = d16 $ do
  let (motion, prog) = (fst p0, inKey p1)
  id $
    every 2 (pullBy crotchet) $
    stack [silence
      ,phrase 1 "mp"
      ,hemidemisemiquaver ~> ped "[0 1!31]"
      ] |* vel p2 #ch 16
        |+ humanise 0.1
        |- note 12
        |+| prog 4 (fst motion
         -- +| "[0]*8"
         -- +| "[0 4 7 ~ . ~]*8"
         +| "[0 4 7 0 . ~ 7 4 2]*8"
          ) |+ note (snd motion)
          -- >> silence
