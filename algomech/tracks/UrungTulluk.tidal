-- URUNG TULLUK

runWith andante

keySig = A \\\ aeolian

p06 p0 p1 p2 = d06 $ do
  let (motion, prog) = (fst p0, inKey p1)
  id $
    stack [silence
      ,note "0*4"
      ,cc 1 (lfo saw 0.65 0.69)
      ,cc 74 0.7
      ] |* vel p2 #ch 06
        -- |- note 12
        |+| prog 4 (fst motion
         -- +| "[0 0 . <-5 -3 0 <-5 0>>]*4"
         -- +| "[0 <-5 -3>]*16"
         -- +| "[4,7,9]*16"
          ) |+ note (snd motion)

p08 p0 p1 p2 = d08 $ do
  let (motion, prog) = (snd p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp"
      -- ,fast "8!2 12 <12 16>" (modwheel $ fastcat [lfo sine 0 1])
      ,modwheel 0.0
      ] |* vel p2 #ch 08
        -- |- note 12
        |+| prog 4 (fst motion
         -- +| "[7 0 4 6]*16"
         -- +| "[0 0]*32"
          ) |+ note (snd motion)

p09 p0 = d09 $ do
  id $
    stack [silence
      ,ruismk minim "[~ cp]"
      -- ,ruismk crotchet "[~ sn]/2"
      ,ruismk crotchet "sb"
      -- ,ruismk 1 "~ ~ bd ~"
      ,within (0.1,1) degrade $ ruismk 1 "bd(3,8) ~"
      -- ,ruismk 1 "hats"
      ,ruismk minim "~ hh"
      ] |= ch 09
        |* vel p0
        -- >> silence

p10 p0 = d10 $ do
  id $
    stack [silence
      ,hats 1 "16" #vel (fast 4 $ crotchet ~> lfo sine 0.3 0.54)
      ,kit 1 "[bd:echo bd:lead]" #vel 0.8
      ,kit 1 "~ [~!2 bd? ss] [~ bd] ss" #vel 0.6
      ,kit minim "[~ <rm:echos rm:leads>]" #vel 0.7
      ,cymbals crotchet "~ rd" #vel 0.6
      ] |* vel p0 #ch 10
        |* vel "[1.1 0.9!7]*4"
        |+ vel 0.3
        |+ humanise 0.2
        -- >> silence

p11 p0 p1 p2 = d11 $ do
  let (motion, prog) = (fst p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp"
      ,modwheel 0.2
      ] |* vel p2 #ch 11
        |+ note 12
        -- |= legato "1.1!7 0.7"
        |+| prog 4 (fst motion
         -- +| "[7 0 4 6]*16"
         -- +| "[0 -5]*4"
         -- +| "[0 0]*32"
          ) |+ note (snd motion)

p12 p0 p1 p2 = d12 $ do
  let (motion, prog) = (fst p0, inKey p1)
  let lfo1 = slow 5 $ 0.5 <~ lfo sine 0.01 0.11
  id $
    stack [silence
      ,dOcean
        (lfo sine 0.3 0.4) -- 0.62 -- cutoff
        0.4 -- res
        (2 <~ lfo1*2) -- contour
        (lfo1 *1) -- osc2&3
        0 -- oscmod
        (lfo1*1) -- lfo
      ,phrase 1 "mp"
      ] |* vel p2 #ch 12
        |+ note 24
        |+| prog 4 (fst motion
         -- +| "[0 0 . <-5 -3 0 <-5 0>>]*4"
         +| "[0 <2 4 [5 3] 0>]*4"
         -- +| "0*16"
          ) |+ note (snd motion)
          -- >> silence
          p13 p0 p1 p2 = d13 $ do

  let (motion, prog) = (fst p0, inKey p1)
  id $
      stack [silence
      ,phrase 1 "mp"
      ,blend 0
      ] |* vel p2 #ch 13
        |- note 12
        |+| prog 4 (fst motion
         -- +| "[0 0 . <-5 -3 0 <-5 0>>]*4"
         +| "[0 2]*16"
         -- +| "[7 2 4 2]*16"
         +| "0*32"
          ) |+ note (snd motion)

hush
