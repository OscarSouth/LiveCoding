p "tuul" $ do
  let out = 8*9999
  let
  seqP [syncStart,startTransport,stopTransport out
    ,bar 0 out metronome
    ]

runWith moderato

p08 p0 p1 p2 = d08 $ do
  let (motion, prog) = (snd p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp"
      ,modwheel 0.2
      ] |* vel p2 #ch 08
        -- |- note 12
        |+| prog 4 (fst motion
         +| "[0 0]*16"
          ) |+ note (snd motion)
      -- >> silence

p09 p0 = d09 $ do
  id $
    stack [silence
      ,ruismk minim "~ cp"
      ,ruismk crotchet "bd"
      ] |* vel p0 #ch 09
      -- >> silence

p11 p0 p1 p2 = d11 $ do
  let (motion, prog) = (fst p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "fff"
      ,modwheel 0.3
      ] |* vel p2 #ch 11
        -- |+ note 12
        |+| prog 4 (fst motion
         -- +| "0"
          ) |+ note (snd motion)
      -- >> silence

p15 p0 p1 p2 = d15 $ do
  let (motion, prog) = (snd p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "fff"
      ,hemidemisemiquaver ~> ped "[0 1!15]"
      ] |* vel p2 #ch 15
        |+ humanise 0.1
        |- note 24
        |+| prog 4 (fst motion
         -- +| "-2"
         +| "[0 7 14 7]*8"
          ) |+ note (snd motion)
      -- >> silence

p16 p0 p1 p2 = d16 $ do
  let (motion, prog) = (fst p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp"
      ,semiquaver ~>  ped "[0 1!7]"
      ] |* vel p2 #ch 16
        |+ humanise 0.1
        -- |- note 12
        |+| prog 4 (fst motion
         -- +| ""
          ) |+ note (snd motion)
      -- >> silence
