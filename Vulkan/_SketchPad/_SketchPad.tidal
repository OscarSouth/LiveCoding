(keySig,v,c,b) = (
  C \\\ aeolian
  ,(f vTheme, f vHarm, 0) :: Section
  ,(f cTheme, f cHarm, 1) :: Section
  ,(f bTheme, f bHarm, 2) :: Section
  )
    where
      f a =
        let func = cat
         in (func $ fst a, func $ snd a)
      vTheme = ([ -- VERSE THEME
        "0",
        "0"
        ],[ -- TRANSPOSE
        "0"
        ])
      vHarm = ([ -- VERSE HARMONY
        "0"
        ],[ -- TRANSPOSE
        "0"
        ])
      cTheme = ([ -- CHORUS THEME
        "0",
        "0"
        ],[ -- TRANSPOSE
        "0"
        ])
      cHarm = ([ -- CHORUS HARMONY
        "0"
        ],[ -- TRANSPOSE
        "0"
        ])
      bTheme = ([ -- BREAK THEME
        "0"
        ],[ -- TRANSPOSE
        "0"
        ])
      bHarm = ([ -- BREAK HARMONY
        "0"
        ],[ -- TRANSPOSE
        "0"
        ])

p08 p0 p1 p2 = d08 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stack [silence
      -- ,phrase 2 "mp ~!3"
      ,phrase 1 "mp"
      ,modwheel 0.0
      ] |* vel p2 #ch 08
        -- |+ note 12
        |+| prog 4 (fst motion
         -- +| "[<12 11 10 9> 0 0 0]*8"
         -- +| "[0 0 0 <2 -3>]*8"
         +| "0*64"
          ) |+ note (snd motion)
      -- >> silence

p09 p0 = d09 $ do
  id $
    stack [silence
      ,ruismk crotchet "bd"
      -- ,ruismk minim "~ cp"
      -- ,ruismk minim "~ hh"
      -- ,ruismk 1 "hats"
      ] |* vel p0 #ch 09
      -- >> silence

p12 p0 p1 p2 = d12 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  let lfo1 = slow 5 $ 0.5 <~ lfo sine 0.01 0.11
  id $
    stack [silence
      ,slow 2 $ phrase 1 "mp"
      ,modwheel 0.0
      ] |* vel p2 #ch 12
        |- note 12
        |+| prog 4 (fst motion
         +| "[4,9,14]"
          ) |+ note (snd motion)
      -- >> silence

hush

runWith moderato

hush''

p05 p0 p1 = d05 $ do
  let (_,_,struc) = p0
  let p =
        [harmonics 1 "E1 ~ ~ B1 . ~ G2 . ~ B1 ~ ~ . E1 ~"
        ,harmonics 1 "E2 ~ ~ G1 . ~ B1 . ~ G1 ~ ~ . E1 ~"
        ]
  id $
    -- trunc 0.77 $
    stack [silence
      ,lever 0
      ,cat [p!!0,p!!0,p!!0,p!!struc]
      ,finetune 0
      ,transpose 1
      ,sus "[1!3 0]"
      ,sus 0
      ,atk 0.0
      ,verb 0.4
      ,echo 0.3
      ] |= vel p1


p08 p0 p1 p2 = d08 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stack [silence
      ,phrase minim "mp"
      ,hemidemisemiquaver ~> ped "[0 1!31]"
      ] |* vel p2 #ch 08
        |+ humanise 0.1
        |- note 24
        |+| prog 4 (fst motion
         -- +| "[0 7 14 7]*8"
          ) |+ note (snd motion)
            -- |+ legato 0.4
            -- |+ vel "0.2"
      -- >> silence

p07 p0 p1 p2 = d07 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stack [silence
      ,phrase minim "mp"
      ,hemidemisemiquaver ~> ped "[0 1!31]"
      ] |* vel p2 #ch 07
        |+ humanise 0.1
        -- |- note 24
        |+| prog 4 (fst motion
         -- +| "[0 7 14 7]*8"
          ) |+ note (snd motion)
            -- |+ legato 0.4
            -- |+ vel "0.2"
      -- >> silence

d01 $ note 0 #ch 08

hush'

p05 p0 p1 = d05 $ do
  let (_,_,struc) = p0
  let p =
        [harmonics 1 "E1 ~ ~ B1 . ~ G2 . ~ B1 ~ ~ . E1 ~"
        ,harmonics 1 "E2 ~ ~ G1 . ~ B1 . ~ G1 ~ ~ . E1 ~"
        ,harmonics 1 "b3"
        ]
  id $
    -- trunc 0.77 $
    stack [silence
      ,lever 0
      -- ,p!!2
      ,cat [p!!0,p!!0,p!!0,p!!struc]
      ,finetune 0
      ,transpose 1
      ,sus "[1!3 0]"
      -- ,sus 0
      ,atk 0.0
      ,verb 0.4
      ,echo 0.3
      ] |= vel p1

hush''
