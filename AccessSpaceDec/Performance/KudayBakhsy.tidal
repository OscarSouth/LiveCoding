hush''

  -- UDAGAN 6.12.19

master = 0.9

pickup midiParams

once $ do
  let vol = master*0.0
  let v = (*vol)
  stack [silence
    ,ruismaker $v 0.99
    ,stochastic $v 0.0
    ,samplr $v 0.0
    ,modelD $v 0.99
    ,laplace $v 0.99
    ,overtones $v 0.99
    ,doubleBass $v 0.99
    ,electricPiano $v 0.99
    ,acousticPiano $v 0.99
    ]

p "transport" $ do
  let out = 8*9999
  let
  seqP [syncStart
    ,startTransport
    ,stopTransport out
    ,bar 0 out metronome
    ]

runWith moderato

  ------------------------
  ----- KUDAY BAKHSY------
  ------------------------

(keySig,v,c) = (
  C \\\ aeolian
  ,(f vTheme, f vHarm, 0) :: Section
  ,(f cTheme, f cHarm, 1) :: Section
  )
    where
      f a = (fastcat $ fst a, fastcat $ snd a)
      vTheme = ([ -- VERSE THEME
        "0 ~ ~ 4 . ~ ~ 5 ~ . ~ 4 ~ ~ . 0 ~ ~",
        "0 ~ ~ 4 . ~ ~ 5 ~ . ~ 4 ~ ~ . 0 ~ ~",
        "0 ~ ~ 4 . ~ ~ 5 ~ . ~ 4 ~ ~ . 0 ~ ~",
        "3 ~ ~ 2 . ~ ~ 4 ~ . ~ 2 ~ ~ . 0 ~ ~"
        ],[ -- TRANSPOSE
        "0"
        ])
      vHarm = ([ -- VERSE HARMONY
        "0"
        ],[ -- TRANSPOSE
        "0"
        ])
      cTheme = ([ -- CHORUS THEME
        "0 ~ ~ 4 . ~ ~ 5 ~ . ~ 4 ~ ~ . 0 ~ ~",
        "0 ~ ~ 4 . ~ ~ 5 ~ . ~ 4 ~ ~ . 0 ~ ~",
        "0 ~ ~ 4 . ~ ~ 5 ~ . ~ 4 ~ ~ . 0 ~ ~",
        "3 ~ ~ 2 . ~ ~ 4 ~ . ~ 2 ~ ~ . 0 ~ ~"
        ],[ -- TRANSPOSE
        "0"
        ])
      cHarm = ([ -- CHORUS HARMONY
        -- "0 2 -4 <-3 [-1 -3]>"
        "0 0 -2 <-3 [-3 -1]>"
        -- "0 2 <-4 [-2!3 -4!5]> <-3 [-1!3 -3!5]>"
        ],[ -- TRANSPOSE
        "0"
        ])

  -- SOLO INTRO (FORGE KHOMUS)

once $ do
  let vol = master*0.99
  let v = (*vol)
  stack [silence
    ,samplr $ v 0.9
    ,overtones $v 0.5
    -- ,stochastic $v 0.2
    ,laplace $v 0.7
    ]

-- fire, overtone and low overtones samples

p05 p0 p1 = d05 $ do
  let (_,_,struc) = p0
  let p =
        [harmonics 1 "E1 ~ ~ B1 . ~ G2 . ~ B1 ~ ~ . E1 ~"
        ,harmonics 1 "E2 ~ ~ G1 . ~ B1 . ~ G1 ~ ~ . E1 ~"
        ]
  id $
    degrade $
    trunc (lfo rand 0.2 0.7) $
    slow 2 $
    stack [silence
      ,lever 0
      ,cat [p!!0,p!!0,p!!0,p!!struc]
      ,sus "[1!3 0]"
      -- ,sus 0
      -- ,atk 0.01
      ,atk 0.9
      ] |= vel p1

once $ do
  let vol = master*0.99
  let v = (*vol)
  stack [silence
    ,overtones $v 0.3
    ,stochastic $v 0.2
    ,ruismaker $v 0.8
    ,laplace $v 0.7
    ]

do
  let
    dyn = 0.6
    s = v
    k = keySig
    d = (*dyn)
  mapM_ id [hush
    ,p05 s $d 0.4
    ]

  -- BUILD UP WITH MUSIC (FORGE KHOMUS)

  -- LAPLACE
p13 p0 p1 p2 = d13 $ do
  let (motion, prog) = (fst' p0, inKey p1)
  id $
    stack [silence
      ,slow 2 $ note "0 ~"
      ,blend 1
      ] |* vel p2 #ch 13
        |- note 12
        |+| prog 4 (fst motion
         -- +| "[0 -3]*2"
         +| "[<-3 -3 -3 0>]/2"
          ) |+ note (snd motion)
            -- >> silence

p09 p0 = d09 $ do
  id $
    stack [silence
      -- ,ruismk 2 "bd bd sn bd ~!12"
      ,0.5 ~> ruismk quaver "hh" |* vel (fast 2 $ crotchet ~> lfo sine 0.2 0.9)
      -- ,ruismk quaver "oh"
      ] |* vel p0 #ch 09
      -- >> silence

do
  let
    dyn = 0.8
    s = v
    k = keySig
    d = (*dyn)
  mapM_ id [hush
    ,p05 s $d 0.7
    ,p09 $d 0.6
    ,p13 s k $d 0.8
    ]

once $ do
  let vol = master*0.99
  let v = (*vol)
  stack [silence
    ,overtones $v 0.7
    ,stochastic $v 0.3
    ,modelD $v 0.6
    ,ruismaker $v 0.8
    ]

p12 p0 p1 p2 = d12 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stack [silence
      ,phrase 2 "mp ~!3"
      ] |* vel p2 #ch 12
        |- note "12"
        |+| prog 4 (fst motion
          ) |+ note (snd motion)
        -- >> silence


p09 p0 = d09 $ do
  id $
    stack [silence
      ,ruismk 2 "bd bd sn bd ~!12"
      ,0.5 ~> ruismk quaver "hh" |* vel (fast 2 $ crotchet ~> lfo sine 0.2 0.9)
      -- ,ruismk quaver "oh"
      ] |* vel p0 #ch 09
      -- >> silence

modelDprog 1
  >> do
  let
    dyn = 0.5
    s = v
    k = keySig
    d = (*dyn)
  mapM_ id [hush
    ,p05 s $d 0.7
    ,p09 $d 0.5
    ,p12 s k $d 0.1
    ,p13 s k $d 0.8
    ]

p12 p0 p1 p2 = d12 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp ~"
      ] |* vel p2 #ch 12
        -- |- note "[12 0]/4"
        |- note "12"
        |= legato 0.55
        |+| prog 4 (fst motion
         +| "0*32"
          ) |+ note (snd motion)
        -- >> silence

p09 p0 = d09 $ do
  id $
    stack [silence
      ,ruismk 1 "bd bd sn bd ~!4"
      ,0.5 ~> ruismk quaver "hh" |* vel (fast 2 $ crotchet ~> lfo sine 0.2 0.9)
      ,ruismk crotchet "oh"
      ] |* vel p0 #ch 09
      -- >> silence

once $ do
  let vol = master*0.99
  let v = (*vol)
  stack [silence
    ,overtones $v 0.9
    ,stochastic $v 0.6
    ,ruismaker $v 0.9
    ,laplace $v 0.7
    ,modelD $v 0.7
    ]

p05 p0 p1 = d05 $ do
  let (_,_,struc) = p0
  let p =
        [harmonics 1 "E1 ~ ~ B1 . ~ G2 . ~ B1 ~ ~ . E1 ~"
        ,harmonics 1 "E2 ~ ~ G1 . ~ B1 . ~ G1 ~ ~ . E1 ~"
        ]
  id $
    stack [silence
      ,lever 0
      ,cat [p!!0,p!!0,p!!0,p!!struc]
      ,sus "[1!3 0]"
      -- ,sus 0
      ,atk 0.3
      -- ,atk 0.7
      ] |= vel p1

do
  let
    dyn = 0.6
    s = v
    k = keySig
    d = (*dyn)
  mapM_ id [hush
    ,p05 s $d 0.7
    ,p09 $d 0.4
    ,p12 s k $d 0.1
    ,p13 s k $d 0.8
    ]

once $ do
  let vol = master*0.99
  let v = (*vol)
  stack [silence
    ,overtones $v 0.9
    ,stochastic $v 0.8
    ,laplace $v 0.7
    ,ruismaker $v 0.9
    ,modelD $v 0.9
    ]

p09 p0 = d09 $ do
  id $
    stack [silence
      ,ruismk 1 "~ ~ sb [~ sb]"
      ,ruismk minim "~ sn"
      ,ruismk quaver "oh"
      ,degradeBy 0.5 $ ruismk 1 "[~!3 sb] ~!3" |= vel 0.1
      ] |* vel p0 #ch 09
      -- >> silence


p12 p0 p1 p2 = d12 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp"
      -- ,phrase 1 "mp ~"
      ] |* vel p2 #ch 12
        |- note "[12 0]/4"
        |= legato 0.55
        |+| prog 4 (fst motion
         +| "0*32"
          ) |+ note (snd motion)
        -- >> silence

modelDprog 2
  >> do
  let
    dyn = 0.8
    s = c
    k = keySig
    d = (*dyn)
  mapM_ id [hush
    ,p05 s $d 0.7
    ,p09 $d 0.8
    ,p12 s k $d 0.1
    ,p13 s k $d 0.8
    ]

  -- SPOKEN SECTION OVER GROOVE MUSIC (VOX)
p06 p0 p1 p2 = d06 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp"
      -- ,phrase 1 "mp ~"
      ] |* vel p2 #ch 06
        -- |- note "[12 0]/4"
        -- |= legato 0.55
        |- note 12
        |+| prog 4 (fst motion
         +| "0*32"
          ) |+ note (snd motion)
        -- >> silence

once $ do
  let vol = master*0.99
  let v = (*vol)
  stack [silence
    ,overtones $v 0.9
    ,stochastic $v 0.2
    ,ruismaker $v 0.9
    ,laplace $v 0.7
    ,modelD $v 0.9
    ,electricPiano $v 0.8
    ]

p05 p0 p1 = d05 $ do
  let (_,_,struc) = p0
  let p =
        [harmonics 1 "E1 ~ ~ B1 . ~ G2 . ~ B1 ~ ~ . E1 ~"
        ,harmonics 1 "E2 ~ ~ G1 . ~ B1 . ~ G1 ~ ~ . E1 ~"
        ]
  id $
    stack [silence
      ,lever 0
      ,cat [p!!0,p!!0,p!!0,p!!struc]
      ,sus "[1!3 0]"
      -- ,sus 0
      ,atk 0.04
      -- ,atk 0.7
      ] |= vel p1

p07 p0 p1 p2 = d07 $ do
  let (motion, prog) = (fst' p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp"
      ,ped 1
      ] |* vel p2 #ch 07
        |+ note 12
        -- |+ note 12
        -- |= legato 10
        |+| prog 4 (fst motion
         -- +| "0*16"
        -- |+ "[0,4]"
          ) |+ note (snd motion)
      -- >> silence

  -- \/ LOOP AND BUILD \/

p09 p0 = d09 $ do
  id $
    stack [silence
      ,ruismk minim "sb:leads" #vel 0.9
      -- ,ruismk crotchet "sb" #vel 0.9
      -- ,fast 2 $ degrade $ 0.5 <~ (stut 8 0.6 0.125 $ ruismk 1 "cp") #vel 0.2
      -- ,ruismk semiquaver "hh" |+ humanise 0.6 |- vel 0.25
      -- |+ vel "[0 0 0.2 0]*4"
      -- |+ vel "[0 0 [0.2 0] 0]*2"
      -- ,ruismk minim "<bd [~ ~ ~ bd]>" #vel 0.9
        -- ,ruismk crotchet "~ hh"
      ] |* vel p0 #ch 09
        -- |+ vel 0.2
        |+ humanise 0.1
      -- >> silence

do
  let
    dyn = 0.6
    s = c
    k = keySig
    d = (*dyn)
  mapM_ id [hush
    ,p05 s $d 0.3
    ,p09 $d 0.2
    ,p06 s k $d 0.99
    ,p07 s k $d 0.1
    ,p13 s k $d 0.9
    ]
    -- /\ LOOP AND BUILD /\

  -- BREAKDOWN (FORGE KHOMUS, DRUM MACHINE, SLICER)

p12 p0 p1 p2 = d12 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stack [silence
      ,phrase 2 "mp ~!3"
      ] |* vel p2 #ch 12
        |- note "12"
        |+| prog 4 (fst motion
          ) |+ note (snd motion)
        -- >> silence


  -- \/ LOOP AND BUILD \/

p09 p0 = d09 $ do
  id $
    stack [silence
      ,ruismk 2 "bd bd sn bd ~!12"
      -- ,ruismk minim "bd bd sn bd"
      ,ruismk quaver "oh"
      ,0.5 ~> ruismk quaver "hh" |* vel (fast 2 $ crotchet ~> lfo sine 0.2 0.9)
      ] |* vel p0 #ch 09
      -- >> silence

modelDprog 1
  >> do
  let
    dyn = 0.9
    s = v
    k = keySig
    d = (*dyn)
  mapM_ id [hush
    ,p05 s $d 0.8
    ,p09 $d 0.2
    ,p07 s k $d 0.6
    ,p12 s k $d 0.99
    ,p13 s k $d 0.9
    ]

  -- /\ LOOP AND BUILD /\

p09 p0 = d09 $ do
  id $
    stack [silence
      ,ruismk 1 "~ ~ sb [~ sb]"
      ,ruismk minim "~ sn"
      ,ruismk quaver "oh"
      ,degradeBy 0.9 $ ruismk 1 "~ ~ ~ [sn*2 ~]"
      ,degradeBy 0.5 $ ruismk 1 "[~!3 sb] ~!3" |= vel 0.1
      ] |* vel p0 #ch 09
      -- >> silence

p12 p0 p1 p2 = d12 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp"
      -- ,phrase 1 "mp ~"
      ] |* vel p2 #ch 12
        |- note "[12 0]/4"
        |= legato 0.55
        |+| prog 4 (fst motion
         +| "0*32"
          ) |+ note (snd motion)
        -- >> silence

modelDprog 2
  >> do
  let
    dyn = 0.99
    s = c
    k = keySig
    d = (*dyn)
  mapM_ id [hush
    ,p05 s $d 0.8
    ,p09 $d 0.9
    -- ,p07 s k $d 0.6
    ,p12 s k $d 0.99
    ,p13 s k $d 0.9
    ]

  -- \/ LOOP AND BUILD \/

p09 p0 = d09 $ do
  id $
    stack [silence
      ,ruismk 1 "~ ~ sb [~ sb]"
      -- ,ruismk crotchet "sb"
      -- ,ruismk crotchet "bd"
      -- ,ruismk quaver "bd" |= vel (lfo saw 0.2 0.9),ruismk quaver "sn" |= vel (lfo saw 0.2 0.9)
      -- ,ruismk minim "~ fm"
      ,ruismk minim "~ sn"
      ,ruismk quaver "oh"
      ,degradeBy 0.9 $ ruismk 1 "~ ~ ~ [sn*2 ~]"
      ,degradeBy 0.9 $ ruismk 1 "~ ~ [~ sn*2] [sn*2 ~]"
      ,degradeBy 0.5 $ ruismk 1 "[~!3 sb] ~!3" |= vel 0.1
      ] |* vel p0 #ch 09
      -- >> silence

do
  let
    dyn = 0.99
    s = c
    k = keySig
    -- k = C \\\ harmMin
    d = (*dyn)
  mapM_ id [hush
    ,p05 s $d 0.8
    ,p09 $d 0.9
    ,p07 s k $d 0.6
    ,p12 s k $d 0.99
    ,p13 s k $d 0.9
    ]

  -- /\ LOOP AND BUILD /\

p12 p0 p1 p2 = d12 $ do
  let (motion, prog) = (snd' p0, inKey p1)
  id $
    stack [silence
      ,phrase 1 "mp"
      -- ,phrase 1 "mp ~"
      ] |* vel p2 #ch 12
        -- |- note "[12 0]/4"
        |- note 12
        -- |= legato 0.55
        |+| prog 4 (fst motion
         -- +| "0*32"
          ) |+ note (snd motion)
        -- >> silence

do
  let
    dyn = 0.99
    s = v
    k = keySig
    -- k = C \\\ harmMin
    d = (*dyn)
  mapM_ id [hush
    -- ,p05 s $d 0.8
    -- ,p09 $d 0.9
    -- ,p07 s k $d 0.6
    ,p12 s k $d 0.99
    -- ,p13 s k $d 0.9
    ]
  -- OUT

hush

once $ do
  let vol = master*0.0
  let v = (*vol)
  stack [silence
    ,ruismaker $v 0.0
    ,stochastic $v 0.0
    ,samplr $v 0.9
    ,modelD $v 0.0
    ,laplace $v 0.0
    ,overtones $v 0.0
    ,doubleBass $v 0.0
    ,electricPiano $v 0.0
    ,acousticPiano $v 0.0
    ]
